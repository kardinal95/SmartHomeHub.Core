"""conditions, instructions

Revision ID: fbad0d4dc5d2
Revises: 61577535902f
Create Date: 2019-12-12 17:21:04.701129

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fbad0d4dc5d2'
down_revision = '61577535902f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conditions',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('condition_type', sa.Enum('IsEqual', 'IsMore', 'IsLess', 'NotEqual', name='conditiontypeenum'), nullable=True),
    sa.Column('scenario_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source_dev_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('source_parameter', sa.String(length=64), nullable=True),
    sa.Column('target_dev_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('target_parameter', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['scenario_uuid'], ['scenarios.uuid'], ),
    sa.ForeignKeyConstraint(['source_dev_uuid'], ['devices.uuid'], ),
    sa.ForeignKeyConstraint(['target_dev_uuid'], ['devices.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('instructions',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('scenario_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('instruction_type', sa.Enum('SetValue', 'WaitSec', name='instructiontypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['scenario_uuid'], ['scenarios.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('instruction_params',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('instruction_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('pickle_value', sa.Binary(), nullable=True),
    sa.ForeignKeyConstraint(['instruction_uuid'], ['instructions.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_unique_constraint(None, 'scenarios', ['uuid'])
    op.create_unique_constraint(None, 'triggers', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'triggers', type_='unique')
    op.drop_constraint(None, 'scenarios', type_='unique')
    op.drop_table('instruction_params')
    op.drop_table('instructions')
    op.drop_table('conditions')
    # ### end Alembic commands ###
