"""Devices and stuff

Revision ID: 943401e3a6a9
Revises: 821945a114ba
Create Date: 2019-12-10 16:37:13.182720

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '943401e3a6a9'
down_revision = '821945a114ba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('dev_type', sa.Enum('SensorNumeric', 'SensorBinary', 'LightSwitch', 'Switch', 'RGBLightHex', 'Fan4Pos', name='deviceentenum'), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('dev_params',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('device_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('device_param', sa.String(length=64), nullable=False),
    sa.Column('value', sa.String(length=128), nullable=False),
    sa.Column('value_type', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['device_uuid'], ['devices.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('dev_sources',
    sa.Column('uuid', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('endpoint_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('endpoint_param', sa.String(length=64), nullable=False),
    sa.Column('device_uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('device_param', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['device_uuid'], ['devices.uuid'], ),
    sa.ForeignKeyConstraint(['endpoint_uuid'], ['endpoints.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_unique_constraint(None, 'revoked_tokens', ['uuid'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'revoked_tokens', type_='unique')
    op.drop_table('dev_sources')
    op.drop_table('dev_params')
    op.drop_table('devices')
    # ### end Alembic commands ###
